name: "Pull Request Labeler"

on:
  pull_request:
    types: [ labeled ]


# jobs:
#     triage:
#       if: ${{ github.event.label.name == 'bug' }}
#       permissions:
#         contents: read
#         pull-requests: write
#       runs-on: ubuntu-latest
#       steps:
#       - uses: actions/labeler@v4


jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: Check if label is 'bug'
      run: echo "Not a bug label"
      if: ${{ github.event.label.name != 'bug' }}
      
    - name: Apply labels using labeler
      uses: actions/labeler@v4
      if: ${{ github.event.label.name == 'bug' }}

    - name: Print Custom Update
      run: echo "This is a custom update!"

    - name: Add comment to PR with labels
      uses: actions/github-script@v5
      with:
        script: |
          const issueNumber = context.payload.pull_request.number;
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: issueNumber,
          });
          const labels = pullRequest.labels.map(label => label.name);
          const message = `Thanks for your pull request! We have automatically labeled your PR with the following labels: ${labels.join(', ')}`;
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: message,
          });

